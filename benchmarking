#!/bin/bash

numberRequests=10
numberConcurrentRequests=10

echo "Doing ${numberRequests} requests, ${numberConcurrentRequests} at the same time."


# echo ""
# echo "---"
# echo "Start python server"
# cd /vagrant/www
# python -m SimpleHTTPServer & 
# server_pid=$!

# while [ true ]
# do
# 	response_code=`curl -s -I -o /dev/null -w "%{http_code}" http://localhost:8000`
# 	if [ $response_code -eq 200 ]
# 	then
# 		break
# 	fi
# done

# echo ""
# echo "---"
# echo "Start the benchmarking"
# ab -n ${numberRequests} -c ${numberConcurrentRequests} http://localhost:8000/ 

# echo ""
# echo "---"
# echo "Stop python server"
# kill -9 $server_pid

echo ""
echo "---"
echo "Start the benchmarking with nginx"
echo "" > results/test.json
echo "" > results/nginx.csv

xValues=(1 2 3 4)

for x in "${xValues[@]}"
do
	# run test and save results in a csv file
	ab -n ${numberRequests} -c ${x} -e results/nginx-${x}.csv http://localhost:81/

	# extract the 90% result
	echo "${x} -> `cat results/nginx-${x}.csv | grep 90,`" >> results/nginx.csv

	# remove the csv file
	rm results/nginx-${x}.csv

	#ab -n ${numberRequests} -c ${x} -e results/apache-${x}.csv http://localhost:82/
	#echo "${x} -> `cat results/apache-${x}.csv | grep 90,`" >> results/apache.csv
done

# build the json file
fileName=results/test.json
echo '{ "xValues": [' >> $fileName
for x in "${xValues[@]}"
do
	echo "${x}," >> $fileName
done
echo '],"datas": [' >> $fileName
echo ']}' >> $fileName